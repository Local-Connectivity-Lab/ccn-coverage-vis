{"version":3,"sources":["MapSelectionRadio.tsx","Navbar.tsx","Sidebar.tsx","utils/round-2.ts","leaflet-component/site-marker.ts","utils/get-bounds.ts","MapLegend.tsx","utils/fetch-to-json.ts","MeasurementMap.tsx","LineChart.tsx","App.tsx","index.tsx"],"names":["MAP_TYPE_INDEX","ping","upload_speed","download_speed","MapSelectionRadio","props","className","Container","FormControl","component","disabled","loading","Typography","variant","RadioGroup","row","aria-label","name","value","mapType","onChange","event","_mapType","target","Error","setMapType","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","color","Button","options","sites","map","Sidebar","selectedSites","setSelectedSites","labelledBy","round2","num","Math","round","statusColor","Map","isSiteArray","every","isSite","prop","latitude","longitude","address","status","siteMarker","site","summary","L","bindPopup","get","MULTIPLIERS","UNITS","getBounds","center","minLat","minLon","maxLat","maxLon","width","height","project","x","y","_bottomleft","bottomleft","floor","min","ceil","max","_topright","topright","sw","unproject","ne","bounds","setMaxBounds","on","panInsideBounds","animate","left","top","marginTop","ticks","MapLegend","colorDomain","_svg","useRef","current","d3","tickFormat","svg","attr","join","style","selectAll","remove","Object","assign","copy","interpolator","range","append","n","canvas","createCanvas","context","getContext","i","fillStyle","fillRect","ramp","toDataURL","tickValues","domain","NaN","call","undefined","tickSize","g","select","text","id","ref","fetchToJson","url","a","fetch","json","URL","devicePixelRatio","API","MAP_TYPE_CONVERT","MeasurementMap","setLoading","useState","cDomain","setCDomain","setMap","setBounds","markers","setMarkers","layer","setLayer","useEffect","dataRange","_sites","_siteSummary","_map","setView","_bounds","_markers","forEach","set","attribution","maxZoom","minZoom","opacity","addTo","marker","some","s","removeFrom","URLSearchParams","BIN_SIZE_SHIFT","DEFAULT_ZOOM","ss","bins","d","colorScale","clearLayers","bin","idx","fillColor","fillOpacity","stroke","colors","margin","mapTypeConvert","parseLineData","data","output","colNames","Set","keys","values","dd","add","col","o","key","i0","l0","length","d0","push","date","Date","LineChart","offset","xAxis","setXAxis","yAxis","setYAxis","lines","setLines","yTitle","setYTitle","_selectedSites","aggData2","chartWidth","chartHeight","xScale","yScale","xAxisGenerator","yAxisGenerator","lineGenerator","lineData","tooltip","transition","duration","enter","html","console","log","pageX","pageY","update","exit","App","loadingMap","setLoadingMap","loadingLine","setLoadingLine","document","Grid","container","item","xs","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a447ba71.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/Typography';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport 'fontsource-roboto';\n\nconst MAP_TYPE_INDEX = {\n  ping: 1,\n  upload_speed: 1,\n  download_speed: 1,\n} as const;\nexport type MapType = keyof typeof MAP_TYPE_INDEX;\n\nfunction isMapType(m: any): m is MapType {\n  return m in MAP_TYPE_INDEX;\n}\n\ninterface MapSelectionRadioProps {\n  mapType: MapType;\n  setMapType: React.Dispatch<React.SetStateAction<MapType>>;\n  loading: boolean;\n}\n\nexport default function MapSelectionRadio(props: MapSelectionRadioProps) {\n  type InputEvent = React.ChangeEvent<HTMLInputElement>;\n  const handleChange = (event: InputEvent) => {\n    const _mapType = event.target.value;\n    if (!isMapType(_mapType)) {\n      throw new Error('Invalid map type selection: ' + _mapType);\n    }\n    props.setMapType(_mapType);\n  };\n\n  return (\n    <div className='App'>\n      <Container>\n        <FormControl component='fieldset' disabled={props.loading}>\n          <Typography variant='overline'>Map Type</Typography>\n          <RadioGroup\n            row\n            aria-label='gender'\n            name='gender1'\n            value={props.mapType}\n            onChange={handleChange}\n          >\n            {/* remove signal for now because we don't have \"signal\" in our mock data */}\n            {/* <FormControlLabel value=\"signal\" control={<Radio />} label=\"Signal\" /> */}\n            <FormControlLabel\n              value='upload_speed'\n              control={<Radio />}\n              label='Upload Speed'\n            />\n            <FormControlLabel\n              value='download_speed'\n              control={<Radio />}\n              label='Download Speed'\n            />\n            <FormControlLabel value='ping' control={<Radio />} label='Ping' />\n          </RadioGroup>\n        </FormControl>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginBottom: '20px',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function Navbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            CCN - Performance Evaluation\n          </Typography>\n          <Button color='inherit'>About</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MultiSelect from 'react-multi-select-component';\nimport 'fontsource-roboto';\nimport sites from './sites.json';\n\nconst options = sites.map(({ name }) => ({ label: name, value: name }));\n\ninterface SidebarProps {\n  selectedSites: SidebarOption[];\n  setSelectedSites: React.Dispatch<React.SetStateAction<SidebarOption[]>>;\n  loading: boolean;\n}\n\nconst Sidebar = (props: SidebarProps) => {\n  return (\n    <div>\n      <Typography variant='overline'>Select Sites</Typography>\n      <MultiSelect\n        options={options}\n        value={props.selectedSites}\n        onChange={props.setSelectedSites}\n        labelledBy='Select'\n        disabled={props.loading}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","export default function round2(num: number) {\n  return Math.round(num * 100) / 100;\n}\n","import * as L from 'leaflet';\nimport { UNITS, MULTIPLIERS } from '../MeasurementMap';\nimport round2 from '../utils/round-2';\n\nconst statusColor: Map<SiteStatus, string> = new Map([\n  ['active', 'green'],\n  ['confirmed', 'yellow'],\n  ['in-conversation', 'red'],\n]);\n\nexport function isSiteArray(sites: any[]): sites is Site[] {\n  return sites.every(isSite);\n}\n\nexport function isSite(prop: any): prop is Site {\n  return (\n    typeof prop?.name === 'string' ||\n    typeof prop?.latitude === 'number' ||\n    typeof prop?.longitude === 'number' ||\n    typeof prop?.address === 'string' ||\n    prop?.status in statusColor\n  );\n}\n\nexport default function siteMarker(\n  site: Site,\n  summary: { ping: number; upload_speed: number; download_speed: number },\n) {\n  return L.marker([site.latitude, site.longitude]).bindPopup(\n    `${site.name} <span style=\"background-color: ${statusColor.get(\n      site.status,\n    )}\">[${site.status}]</span><br />${site.address}<br/>ping: ${round2(\n      summary?.ping * MULTIPLIERS.ping,\n    )} ${UNITS.ping}<br/>upload speed: ${round2(\n      summary?.upload_speed * MULTIPLIERS.upload_speed,\n    )} ${UNITS.upload_speed}<br/>download speed: ${round2(\n      summary?.download_speed * MULTIPLIERS.download_speed,\n    )} ${UNITS.download_speed}`,\n  );\n}\n","import * as L from 'leaflet';\n\ntype GetBoundsParams = {\n  map: L.Map;\n  center: [number, number];\n  minLat: number;\n  minLon: number;\n  maxLat: number;\n  maxLon: number;\n  width: number;\n  height: number;\n};\n\nexport default function getBounds({\n  map,\n  center,\n  minLat,\n  minLon,\n  maxLat,\n  maxLon,\n  width,\n  height,\n}: GetBoundsParams) {\n  const { x, y } = map.project(center);\n\n  const _bottomleft = map.project([minLat, minLon]);\n  const bottomleft: [number, number] = [\n    Math.floor(Math.min(x - width / 2, _bottomleft.x - width / 10)),\n    Math.ceil(Math.max(y + height / 2, _bottomleft.y + height / 10)),\n  ];\n\n  const _topright = map.project([maxLat, maxLon]);\n  const topright: [number, number] = [\n    Math.ceil(Math.max(x + width / 2, _topright.x + width / 10)),\n    Math.floor(Math.min(y - height / 2, _topright.y - height / 10)),\n  ];\n\n  const sw = map.unproject(bottomleft);\n  const ne = map.unproject(topright);\n\n  const bounds = L.latLngBounds(sw, ne);\n  map\n    .setMaxBounds(bounds)\n    .on('drag', () => map.panInsideBounds(bounds, { animate: false }));\n\n  return {\n    width: topright[0] - bottomleft[0],\n    height: bottomleft[1] - topright[1],\n    left: bottomleft[0],\n    top: topright[1],\n  };\n}\n","import React, { useRef } from 'react';\nimport * as d3 from 'd3';\nimport { createCanvas } from 'node-canvas';\n\nconst tickSize = 6;\nconst height = 150;\nconst marginTop = 40;\nconst marginRight = 15;\nconst marginBottom = 0;\nconst marginLeft = 0;\nconst ticks = height / 64;\n\nfunction ramp(color: (t: number) => string, n = 256) {\n  const canvas = createCanvas(1, n);\n  const context = canvas.getContext('2d');\n\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(0, i, 1, 1);\n  }\n\n  return canvas;\n}\n\ninterface MapProps {\n  colorDomain: number[] | undefined;\n  title: string;\n  width: number;\n}\n\nconst MapLegend = ({ colorDomain, title, width }: MapProps) => {\n  const _svg = useRef<SVGSVGElement>(null);\n\n  if (colorDomain && _svg.current) {\n    const color = d3.scaleSequential(colorDomain, d3.interpolateViridis);\n    const tickFormat = d3.format('.2f');\n\n    const svg = d3\n      .select<SVGElement, unknown>(_svg.current)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', [0, 0, width, height].join(' '))\n      .style('overflow', 'visible')\n      .style('display', 'block');\n\n    svg.selectAll('*').remove();\n\n    let tickAdjust = (g: d3.Selection<SVGGElement, unknown, null, unknown>) =>\n      g.selectAll('.tick line').attr('x1', width - marginRight - marginLeft);\n    let x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginTop, height - marginBottom)),\n      {\n        range() {\n          return [height - marginBottom, marginTop];\n        },\n      },\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.interpolator(),\n          height - marginTop - marginBottom,\n        ).toDataURL(),\n      );\n\n    const n = Math.round(ticks + 1);\n    const tickValues = d3\n      .range(n)\n      .map(i => d3.quantile(color.domain(), i / (n - 1)) ?? NaN);\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},${0})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n          // .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n          .tickSize(tickSize)\n          .tickValues(tickValues),\n      )\n      .call(tickAdjust)\n      .call(g => g.select('.domain').remove())\n      .call(g =>\n        g\n          .append('text')\n          .attr('y', marginTop - 12)\n          .attr('x', width - marginRight - marginLeft - 2)\n          .attr('fill', 'currentColor')\n          .attr('text-anchor', 'begin')\n          .attr('font-weight', 'bold')\n          .attr('class', 'title')\n          .text(title),\n      );\n  }\n\n  return <svg id='map-legend' ref={_svg} className={'leaflet-control'}></svg>;\n};\n\nexport default MapLegend;\n","export default async function fetchToJson(url: string) {\n  return await (await fetch(url)).json();\n}\n","import React, { useEffect, useState } from 'react';\nimport { MapType } from './MapSelectionRadio';\nimport * as L from 'leaflet';\nimport * as d3 from 'd3';\nimport siteMarker, { isSiteArray } from './leaflet-component/site-marker';\nimport getBounds from './utils/get-bounds';\nimport MapLegend from './MapLegend';\nimport fetchToJson from './utils/fetch-to-json';\n\nconst ATTRIBUTION =\n  'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, ' +\n  'under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. ' +\n  'Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, ' +\n  'under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.';\n\nconst URL = `https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}${\n  devicePixelRatio > 1 ? '@2x' : ''\n}.png`;\n\nexport const API = 'http://localhost:7593/';\n\nconst BIN_SIZE_SHIFT = 1;\nconst DEFAULT_ZOOM = 10;\nconst LEGEND_WIDTH = 25;\n\nexport const UNITS = {\n  ping: 'ms',\n  download_speed: 'Gbps',\n  upload_speed: 'Gbps',\n} as const;\n\nexport const MULTIPLIERS = {\n  ping: 1,\n  download_speed: 1 / 1000000,\n  upload_speed: 1 / 1000000,\n} as const;\n\nconst MAP_TYPE_CONVERT = {\n  ping: 'Ping',\n  download_speed: 'Download Speed',\n  upload_speed: 'Upload Speed',\n} as const;\n\ninterface MapProps {\n  mapType: MapType;\n  selectedSites: SidebarOption[];\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  width: number;\n  height: number;\n}\n\nconst MeasurementMap = ({\n  mapType,\n  selectedSites,\n  setLoading,\n  width,\n  height,\n}: MapProps) => {\n  const [cDomain, setCDomain] = useState<number[]>();\n  const [map, setMap] = useState<L.Map>();\n  const [bounds, setBounds] =\n    useState<{ left: number; top: number; width: number; height: number }>();\n  const [markers, setMarkers] = useState(new Map<string, L.Marker>());\n  const [layer, setLayer] = useState<L.LayerGroup>();\n\n  useEffect(() => {\n    (async () => {\n      const dataRange = await fetchToJson(API + 'dataRange');\n      const _sites = await fetchToJson(API + 'sites');\n      const _siteSummary = await fetchToJson(API + 'sitesSummary');\n      const _map = L.map('map-id').setView(dataRange.center, DEFAULT_ZOOM);\n      const _bounds = getBounds({ ...dataRange, map: _map, width, height });\n      const _markers = new Map<string, L.Marker>();\n\n      if (!isSiteArray(_sites)) {\n        throw new Error('data has incorrect type');\n      }\n      _sites.forEach(site =>\n        _markers.set(site.name, siteMarker(site, _siteSummary[site.name])),\n      );\n\n      L.tileLayer(URL, {\n        attribution: ATTRIBUTION,\n        maxZoom: 15,\n        minZoom: 10,\n        opacity: 0.5,\n      }).addTo(_map);\n\n      setMarkers(_markers);\n      setBounds(_bounds);\n      setMap(_map);\n      setLayer(L.layerGroup().addTo(_map));\n      setLoading(false);\n    })();\n  }, [setLoading, width, height]);\n\n  useEffect(() => {\n    if (!map || !markers) return;\n\n    markers.forEach((marker, site) => {\n      if (selectedSites.some(s => s.label === site)) {\n        marker.addTo(map);\n      } else {\n        marker.removeFrom(map);\n      }\n    });\n  }, [selectedSites, map, markers]);\n\n  useEffect(() => {\n    if (!map || !bounds || !layer) return;\n\n    setLoading(true);\n    (async () => {\n      const bins: number[] = await fetchToJson(\n        API +\n          'data?' +\n          new URLSearchParams([\n            ['width', bounds.width + ''],\n            ['height', bounds.height + ''],\n            ['left', bounds.left + ''],\n            ['top', bounds.top + ''],\n            ['binSizeShift', BIN_SIZE_SHIFT + ''],\n            ['zoom', DEFAULT_ZOOM + ''],\n            ['selectedSites', selectedSites.map(ss => ss.label).join(',')],\n            ['mapType', mapType],\n          ]),\n      );\n\n      const colorDomain = [\n        d3.max(bins, d => d * MULTIPLIERS[mapType]) ?? 1,\n        d3.min(bins, d => d * MULTIPLIERS[mapType]) ?? 0,\n      ];\n\n      const colorScale = d3.scaleSequential(colorDomain, d3.interpolateViridis);\n      setCDomain(colorDomain);\n\n      layer.clearLayers();\n      bins.forEach((bin, idx) => {\n        if (bin) {\n          const x = ((idx / bounds.height) << BIN_SIZE_SHIFT) + bounds.left;\n          const y = (idx % bounds.height << BIN_SIZE_SHIFT) + bounds.top;\n\n          const sw = map.unproject([x, y], DEFAULT_ZOOM);\n          const ne = map.unproject(\n            [x + (1 << BIN_SIZE_SHIFT), y + (1 << BIN_SIZE_SHIFT)],\n            DEFAULT_ZOOM,\n          );\n\n          L.rectangle(L.latLngBounds(sw, ne), {\n            fillColor: colorScale(bin * MULTIPLIERS[mapType]),\n            fillOpacity: 0.75,\n            stroke: false,\n          }).addTo(layer);\n        }\n      });\n      setLoading(false);\n    })();\n  }, [selectedSites, mapType, setLoading, map, layer, bounds]);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div id='map-id' style={{ height, width, position: 'absolute' }}></div>\n      <div style={{ position: 'absolute', left: width - LEGEND_WIDTH }}>\n        <MapLegend\n          colorDomain={cDomain}\n          title={`${MAP_TYPE_CONVERT[mapType]} (${UNITS[mapType]})`}\n          width={LEGEND_WIDTH}\n        ></MapLegend>\n      </div>\n    </div>\n  );\n};\n\nexport default MeasurementMap;\n","import React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\nimport { MapType } from './MapSelectionRadio';\n\nimport sites from './sites.json';\nimport { API, MULTIPLIERS } from './MeasurementMap';\nimport fetchToJson from './utils/fetch-to-json';\n\ninterface LineChartProps {\n  mapType: MapType;\n  offset: number;\n  width: number;\n  height: number;\n  selectedSites: SidebarOption[];\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst colors = d3\n  .scaleOrdinal()\n  .domain(sites.map(s => s.name))\n  .range(d3.schemeTableau10);\n\nconst margin = {\n  left: 50,\n  bottom: 20,\n  right: 0,\n  top: 20,\n};\n\nconst mapTypeConvert = {\n  ping: 'Ping (ms)',\n  upload_speed: 'Upload Speed (Gbps)',\n  download_speed: 'Download Speed (Gbps)',\n};\n\n// data parser\nconst parseLineData = (\n  data: {\n    date: string;\n    values: {\n      [site: string]: number;\n    };\n  }[],\n) => {\n  const output: {\n    key: string;\n    color: string;\n    data: { date: Date; value: number }[];\n  }[] = [];\n\n  const colNames = new Set<string>();\n  data.forEach(d => Object.keys(d.values).forEach(dd => colNames.add(dd)));\n  colNames.forEach(col => {\n    const o = {\n      key: col,\n      color: colors(col) + '',\n      data: [] as { date: Date; value: number }[],\n    };\n\n    for (let i0 = 0, l0 = data.length; i0 < l0; i0++) {\n      let d0 = data[i0];\n\n      if (d0.values[col]) {\n        o.data.push({\n          date: new Date(d0.date),\n          value: d0.values[col],\n        });\n      }\n    }\n    output.push(o);\n  });\n\n  return output;\n};\n\nconst LineChart = ({\n  mapType,\n  offset,\n  width,\n  height,\n  selectedSites,\n  setLoading,\n}: LineChartProps) => {\n  const [xAxis, setXAxis] =\n    useState<d3.Selection<SVGGElement, unknown, HTMLElement, any>>();\n  const [yAxis, setYAxis] =\n    useState<d3.Selection<SVGGElement, unknown, HTMLElement, any>>();\n  const [lines, setLines] =\n    useState<d3.Selection<SVGGElement, unknown, HTMLElement, any>>();\n  const [yTitle, setYTitle] =\n    useState<d3.Selection<SVGTextElement, unknown, HTMLElement, any>>();\n\n  useEffect(() => {\n    const svg = d3.select('#line-chart');\n    const g = svg\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    setXAxis(g.append('g'));\n    setYAxis(g.append('g'));\n    setLines(g.append('g'));\n    setYTitle(\n      g.append('g').attr('transform', 'translate(0,10)').append('text'),\n    );\n    g.append('g').attr('transform', 'translate(0,0)').append('text');\n    setLoading(false);\n  }, [setXAxis, setYAxis, setLines, setYTitle, setLoading]);\n\n  useEffect(() => {\n    if (!xAxis || !yAxis || !lines || !yTitle) return;\n    (async function () {\n      setLoading(true);\n      const _selectedSites = selectedSites.map(ss => ss.label);\n\n      const aggData2: {\n        date: string;\n        values: {\n          [site: string]: number;\n        };\n      }[] = await fetchToJson(\n        API +\n          'lineSummary?' +\n          new URLSearchParams([\n            ['mapType', mapType],\n            ['selectedSites', _selectedSites.join(',')],\n          ]),\n      );\n\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n\n      const xScale = d3\n        .scaleTime()\n        .domain(\n          d3\n            .extent(aggData2, d => new Date(d.date))\n            .map((d?: Date) => d ?? new Date(0)),\n        )\n        .range([0, chartWidth]);\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([\n          0,\n          (d3.max(aggData2, d => Math.max(...Object.values(d.values))) ?? 1) *\n            MULTIPLIERS[mapType],\n        ])\n        .range([chartHeight, 0]);\n\n      const xAxisGenerator = d3.axisBottom(xScale);\n\n      const yAxisGenerator = d3.axisLeft(yScale);\n\n      const lineGenerator = d3\n        .line<{ date: Date; value: number }>()\n        .x(d => xScale(d.date))\n        .y(d => yScale(d.value * MULTIPLIERS[mapType]));\n\n      const lineData = parseLineData(aggData2);\n\n      // ----------------------------------------- CHART --------------------------------------------------\n\n      const svg = d3.select('#line-chart');\n      const tooltip = d3\n        .select('#line-tooltip')\n        .style('position', 'absolute')\n        .style('background-color', 'white')\n        .style('border', 'solid')\n        .style('border-width', '2px')\n        .style('border-radius', '3px')\n        .style('padding', '3px')\n        .style('font-size', 'small')\n        .style('opacity', 1)\n        .style('display', 'none');\n\n      svg.attr('width', width).attr('height', height);\n\n      xAxis\n        .attr('transform', `translate(0, ${chartHeight})`)\n        .transition()\n        .duration(1000)\n        .call(xAxisGenerator);\n\n      yAxis.transition().duration(1000).call(yAxisGenerator);\n\n      yTitle\n        .attr('x', 3)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(mapTypeConvert[mapType]);\n\n      lines\n        .selectAll('.line')\n        .data(lineData, (d: any) => d.key)\n        .join(\n          enter =>\n            enter\n              .append('path')\n              .attr('d', d => lineGenerator(d.data))\n              .attr('class', 'line')\n              .style('fill', 'none')\n              .style('stroke', d => d.color)\n              .style('stroke-width', 2)\n              .style('stroke-linejoin', 'round')\n              .style('opacity', 0)\n              .on('mouseover', function (event, d) {\n                tooltip.style('display', 'inline').html(d.key);\n                console.log('over');\n              })\n              .on('mousemove', function (event, d) {\n                tooltip\n                  .html(d.key)\n                  .style('left', event.pageX + 10 + 'px')\n                  .style('top', event.pageY + 20 + 'px');\n                console.log('move');\n              })\n              .on('mouseout', function (event, d) {\n                tooltip.style('display', 'none');\n              }),\n          update => update,\n          exit => exit.remove(),\n        )\n        .transition()\n        .duration(1000)\n        .style('opacity', 1)\n        .attr('d', d => lineGenerator(d.data));\n      setLoading(false);\n    })();\n  }, [\n    mapType,\n    xAxis,\n    yAxis,\n    lines,\n    yTitle,\n    selectedSites,\n    height,\n    setLoading,\n    width,\n  ]);\n  return (\n    <>\n      <div style={{ height, width, position: 'relative', top: offset }}>\n        <svg id='line-chart'></svg>\n      </div>\n      <div id='line-tooltip' style={{ position: 'absolute', opacity: 0 }}></div>\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MapSelectionRadio, { MapType } from './MapSelectionRadio';\nimport Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport MeasurementMap from './MeasurementMap';\nimport 'fontsource-roboto';\nimport './index.css';\nimport LineChart from './LineChart';\n\nfunction App() {\n  const [mapType, setMapType] = useState<MapType>('ping');\n  const [selectedSites, setSelectedSites] = useState<SidebarOption[]>([]);\n  const [loadingMap, setLoadingMap] = useState(true);\n  const [loadingLine, setLoadingLine] = useState(true);\n\n  document.title = 'Performance Evaluation';\n  return (\n    <div className='App'>\n      <Navbar />\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <Sidebar\n              selectedSites={selectedSites}\n              setSelectedSites={setSelectedSites}\n              loading={loadingLine || loadingMap}\n            />\n          </Grid>\n          <Grid item xs={9}>\n            <MapSelectionRadio\n              mapType={mapType}\n              setMapType={setMapType}\n              loading={loadingLine || loadingMap}\n            />\n            <MeasurementMap\n              mapType={mapType}\n              selectedSites={selectedSites}\n              setLoading={setLoadingMap}\n              width={910}\n              height={500}\n            />\n            <LineChart\n              mapType={mapType}\n              offset={500}\n              width={910}\n              height={200}\n              selectedSites={selectedSites}\n              setLoading={setLoadingLine}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}