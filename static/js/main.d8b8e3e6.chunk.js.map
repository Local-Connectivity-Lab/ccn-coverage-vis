{"version":3,"sources":["MapSelectionRadio.tsx","Navbar.tsx","Sidebar.tsx","leaflet-component/site-marker.ts","utils/get-bounds.ts","MapLegend.tsx","utils/fetch-to-json.ts","MeasurementMap.tsx","App.tsx","index.tsx"],"names":["MAP_TYPE_INDEX","ping","upload_speed","download_speed","MapSelectionRadio","props","className","Container","FormControl","component","disabled","loading","Typography","variant","RadioGroup","row","aria-label","name","value","mapType","onChange","event","_mapType","target","Error","setMapType","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","color","Button","options","map","Sidebar","selectedSites","setSelectedSites","labelledBy","statusColor","Map","isSiteArray","sites","every","isSite","prop","latitude","longitude","address","status","siteMarker","site","L","bindPopup","get","getBounds","center","minLat","minLon","maxLat","maxLon","width","height","project","x","y","_bottomleft","bottomleft","Math","floor","min","ceil","max","_topright","topright","sw","unproject","ne","bounds","setMaxBounds","on","panInsideBounds","animate","left","top","marginTop","ticks","MapLegend","colorDomain","_svg","useRef","current","d3","tickFormat","svg","attr","join","style","selectAll","remove","Object","assign","copy","interpolator","range","append","n","canvas","createCanvas","context","getContext","i","fillStyle","fillRect","ramp","toDataURL","round","tickValues","domain","NaN","call","undefined","tickSize","g","select","text","id","ref","fetchToJson","url","a","fetch","json","URL","devicePixelRatio","API","MeasurementMap","setLoading","useState","cDomain","setCDomain","setMap","setBounds","markers","setMarkers","layer","setLayer","useEffect","dataRange","_sites","_map","setView","_bounds","_markers","forEach","set","attribution","maxZoom","minZoom","opacity","addTo","marker","some","s","removeFrom","URLSearchParams","BIN_SIZE_SHIFT","DEFAULT_ZOOM","ss","bins","d","colorScale","clearLayers","bin","idx","fillColor","fillOpacity","stroke","App","document","Grid","container","item","xs","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8b8e3e6.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/Typography';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport 'fontsource-roboto';\n\nconst MAP_TYPE_INDEX = {\n  ping: 1,\n  upload_speed: 1,\n  download_speed: 1,\n} as const;\nexport type MapType = keyof typeof MAP_TYPE_INDEX;\n\nfunction isMapType(m: any): m is MapType {\n  return m in MAP_TYPE_INDEX;\n}\n\ninterface MapSelectionRadioProps {\n  mapType: MapType;\n  setMapType: React.Dispatch<React.SetStateAction<MapType>>;\n  loading: boolean;\n}\n\nexport default function MapSelectionRadio(props: MapSelectionRadioProps) {\n  type InputEvent = React.ChangeEvent<HTMLInputElement>;\n  const handleChange = (event: InputEvent) => {\n    const _mapType = event.target.value;\n    if (!isMapType(_mapType)) {\n      throw new Error('Invalid map type selection: ' + _mapType);\n    }\n    props.setMapType(_mapType);\n  };\n\n  return (\n    <div className='App'>\n      <Container>\n        <FormControl component='fieldset' disabled={props.loading}>\n          <Typography variant='overline'>Map Type</Typography>\n          <RadioGroup\n            row\n            aria-label='gender'\n            name='gender1'\n            value={props.mapType}\n            onChange={handleChange}\n          >\n            {/* remove signal for now because we don't have \"signal\" in our mock data */}\n            {/* <FormControlLabel value=\"signal\" control={<Radio />} label=\"Signal\" /> */}\n            <FormControlLabel\n              value='upload_speed'\n              control={<Radio />}\n              label='Upload Speed'\n            />\n            <FormControlLabel\n              value='download_speed'\n              control={<Radio />}\n              label='Download Speed'\n            />\n            <FormControlLabel value='ping' control={<Radio />} label='Ping' />\n          </RadioGroup>\n        </FormControl>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginBottom: '20px',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function Navbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            CCN - Performance Evaluation\n          </Typography>\n          <Button color='inherit'>About</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MultiSelect from 'react-multi-select-component';\nimport 'fontsource-roboto';\nimport sites from './sites.json';\n\nconst options = sites.map(({ name }) => ({ label: name, value: name }));\n\ninterface SidebarProps {\n  selectedSites: SidebarOption[];\n  setSelectedSites: React.Dispatch<React.SetStateAction<SidebarOption[]>>;\n  loading: boolean;\n}\n\nconst Sidebar = (props: SidebarProps) => {\n  return (\n    <div>\n      <Typography variant='overline'>Select Sites</Typography>\n      <MultiSelect\n        options={options}\n        value={props.selectedSites}\n        onChange={props.setSelectedSites}\n        labelledBy='Select'\n        disabled={props.loading}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import * as L from 'leaflet';\n\nconst statusColor: Map<SiteStatus, string> = new Map([\n  ['active', 'green'],\n  ['confirmed', 'yellow'],\n  ['in-conversation', 'red'],\n]);\n\nexport function isSiteArray(sites: any[]): sites is Site[] {\n  return sites.every(isSite);\n}\n\nexport function isSite(prop: any): prop is Site {\n  return (\n    typeof prop?.name === 'string' ||\n    typeof prop?.latitude === 'number' ||\n    typeof prop?.longitude === 'number' ||\n    typeof prop?.address === 'string' ||\n    prop?.status in statusColor\n  );\n}\n\nexport default function siteMarker(site: Site) {\n  return L.marker([site.latitude, site.longitude]).bindPopup(\n    `${site.name} <span style=\"background-color: ${statusColor.get(\n      site.status,\n    )}\">[${site.status}]</span><br />${site.address}`,\n  );\n}\n","import * as L from 'leaflet';\n\ntype GetBoundsParams = {\n  map: L.Map;\n  center: [number, number];\n  minLat: number;\n  minLon: number;\n  maxLat: number;\n  maxLon: number;\n  width: number;\n  height: number;\n};\n\nexport default function getBounds({\n  map,\n  center,\n  minLat,\n  minLon,\n  maxLat,\n  maxLon,\n  width,\n  height,\n}: GetBoundsParams) {\n  const { x, y } = map.project(center);\n\n  const _bottomleft = map.project([minLat, minLon]);\n  const bottomleft: [number, number] = [\n    Math.floor(Math.min(x - width / 2, _bottomleft.x - width / 10)),\n    Math.ceil(Math.max(y + height / 2, _bottomleft.y + height / 10)),\n  ];\n\n  const _topright = map.project([maxLat, maxLon]);\n  const topright: [number, number] = [\n    Math.ceil(Math.max(x + width / 2, _topright.x + width / 10)),\n    Math.floor(Math.min(y - height / 2, _topright.y - height / 10)),\n  ];\n\n  const sw = map.unproject(bottomleft);\n  const ne = map.unproject(topright);\n\n  const bounds = L.latLngBounds(sw, ne);\n  map\n    .setMaxBounds(bounds)\n    .on('drag', () => map.panInsideBounds(bounds, { animate: false }));\n\n  return {\n    width: topright[0] - bottomleft[0],\n    height: bottomleft[1] - topright[1],\n    left: bottomleft[0],\n    top: topright[1],\n  };\n}\n","import React, { useRef } from 'react';\nimport * as d3 from 'd3';\nimport { createCanvas } from 'node-canvas';\n\nconst tickSize = 6;\nconst height = 150;\nconst marginTop = 40;\nconst marginRight = 15;\nconst marginBottom = 0;\nconst marginLeft = 0;\nconst ticks = height / 64;\n\nfunction ramp(color: (t: number) => string, n = 256) {\n  const canvas = createCanvas(1, n);\n  const context = canvas.getContext('2d');\n\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(0, i, 1, 1);\n  }\n\n  return canvas;\n}\n\ninterface MapProps {\n  colorDomain: number[] | undefined;\n  title: string;\n  width: number;\n}\n\nconst MapLegend = ({ colorDomain, title, width }: MapProps) => {\n  const _svg = useRef<SVGSVGElement>(null);\n\n  if (colorDomain && _svg.current) {\n    const color = d3.scaleSequential(colorDomain, d3.interpolateViridis);\n    const tickFormat = d3.format('.2f');\n\n    const svg = d3\n      .select<SVGElement, unknown>(_svg.current)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', [0, 0, width, height].join(' '))\n      .style('overflow', 'visible')\n      .style('display', 'block');\n\n    svg.selectAll('*').remove();\n\n    let tickAdjust = (g: d3.Selection<SVGGElement, unknown, null, unknown>) =>\n      g.selectAll('.tick line').attr('x1', width - marginRight - marginLeft);\n    let x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginTop, height - marginBottom)),\n      {\n        range() {\n          return [height - marginBottom, marginTop];\n        },\n      },\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.interpolator(),\n          height - marginTop - marginBottom,\n        ).toDataURL(),\n      );\n\n    const n = Math.round(ticks + 1);\n    const tickValues = d3\n      .range(n)\n      .map(i => d3.quantile(color.domain(), i / (n - 1)) ?? NaN);\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},${0})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n          // .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n          .tickSize(tickSize)\n          .tickValues(tickValues),\n      )\n      .call(tickAdjust)\n      .call(g => g.select('.domain').remove())\n      .call(g =>\n        g\n          .append('text')\n          .attr('y', marginTop - 12)\n          .attr('x', width - marginRight - marginLeft - 2)\n          .attr('fill', 'currentColor')\n          .attr('text-anchor', 'begin')\n          .attr('font-weight', 'bold')\n          .attr('class', 'title')\n          .text(title),\n      );\n  }\n\n  return <svg id='map-legend' ref={_svg} className={'leaflet-control'}></svg>;\n};\n\nexport default MapLegend;\n","export default async function fetchToJson(url: string) {\n  return await (await fetch(url)).json();\n}\n","import React, { useEffect, useState } from 'react';\nimport { MapType } from './MapSelectionRadio';\nimport * as L from 'leaflet';\nimport * as d3 from 'd3';\nimport siteMarker, { isSiteArray } from './leaflet-component/site-marker';\nimport getBounds from './utils/get-bounds';\nimport MapLegend from './MapLegend';\nimport fetchToJson from './utils/fetch-to-json';\n\nconst ATTRIBUTION =\n  'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, ' +\n  'under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. ' +\n  'Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, ' +\n  'under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.';\n\nconst URL = `https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}${\n  devicePixelRatio > 1 ? '@2x' : ''\n}.png`;\n\nconst API = 'http://attu.cs.washington.edu:7593/';\n\nconst BIN_SIZE_SHIFT = 1;\nconst DEFAULT_ZOOM = 10;\nconst LEGEND_WIDTH = 25;\n\ninterface MapProps {\n  mapType: MapType;\n  selectedSites: SidebarOption[];\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  width: number;\n  height: number;\n}\n\nconst MeasurementMap = ({\n  mapType,\n  selectedSites,\n  setLoading,\n  width,\n  height,\n}: MapProps) => {\n  const [cDomain, setCDomain] = useState<number[]>();\n  const [map, setMap] = useState<L.Map>();\n  const [bounds, setBounds] =\n    useState<{ left: number; top: number; width: number; height: number }>();\n  const [markers, setMarkers] = useState(new Map<string, L.Marker>());\n  const [layer, setLayer] = useState<L.LayerGroup>();\n\n  useEffect(() => {\n    (async () => {\n      const dataRange = await fetchToJson(API + 'dataRange');\n      const _sites = await fetchToJson(API + 'sites');\n      const _map = L.map('map-id').setView(dataRange.center, DEFAULT_ZOOM);\n      const _bounds = getBounds({ ...dataRange, map: _map, width, height });\n      const _markers = new Map<string, L.Marker>();\n\n      if (!isSiteArray(_sites)) {\n        throw new Error('data has incorrect type');\n      }\n      _sites.forEach(site => _markers.set(site.name, siteMarker(site)));\n\n      L.tileLayer(URL, {\n        attribution: ATTRIBUTION,\n        maxZoom: 15,\n        minZoom: 10,\n        opacity: 0.5,\n      }).addTo(_map);\n\n      setMarkers(_markers);\n      setBounds(_bounds);\n      setMap(_map);\n      setLayer(L.layerGroup().addTo(_map));\n      setLoading(false);\n    })();\n  }, [setLoading, width, height]);\n\n  useEffect(() => {\n    if (!map || !markers) return;\n\n    markers.forEach((marker, site) => {\n      if (selectedSites.some(s => s.label === site)) {\n        marker.addTo(map);\n      } else {\n        marker.removeFrom(map);\n      }\n    });\n  }, [selectedSites, map, markers]);\n\n  useEffect(() => {\n    if (!map || !bounds || !layer) return;\n\n    setLoading(true);\n    (async () => {\n      const bins: number[] = await fetchToJson(\n        API +\n          'data?' +\n          new URLSearchParams([\n            ['width', bounds.width + ''],\n            ['height', bounds.height + ''],\n            ['left', bounds.left + ''],\n            ['top', bounds.top + ''],\n            ['binSizeShift', BIN_SIZE_SHIFT + ''],\n            ['zoom', DEFAULT_ZOOM + ''],\n            ['selectedSites', selectedSites.map(ss => ss.label).join(',')],\n            ['mapType', mapType],\n          ]),\n      );\n\n      const colorDomain = [\n        d3.max(bins, d => d) ?? 1,\n        d3.min(bins, d => d) ?? 0,\n      ];\n\n      const colorScale = d3.scaleSequential(colorDomain, d3.interpolateViridis);\n      setCDomain(colorDomain);\n\n      layer.clearLayers();\n      bins.forEach((bin, idx) => {\n        if (bin) {\n          const x = ((idx / bounds.height) << BIN_SIZE_SHIFT) + bounds.left;\n          const y = (idx % bounds.height << BIN_SIZE_SHIFT) + bounds.top;\n\n          const sw = map.unproject([x, y], DEFAULT_ZOOM);\n          const ne = map.unproject(\n            [x + (1 << BIN_SIZE_SHIFT), y + (1 << BIN_SIZE_SHIFT)],\n            DEFAULT_ZOOM,\n          );\n\n          L.rectangle(L.latLngBounds(sw, ne), {\n            fillColor: colorScale(bin),\n            fillOpacity: 0.75,\n            stroke: false,\n          }).addTo(layer);\n        }\n      });\n      setLoading(false);\n    })();\n  }, [selectedSites, mapType, setLoading, map, layer, bounds]);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div id='map-id' style={{ height, width, position: 'absolute' }}></div>\n      <div style={{ position: 'absolute', left: width - LEGEND_WIDTH }}>\n        <MapLegend\n          colorDomain={cDomain}\n          title={mapType}\n          width={LEGEND_WIDTH}\n        ></MapLegend>\n      </div>\n    </div>\n  );\n};\n\nexport default MeasurementMap;\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MapSelectionRadio, { MapType } from './MapSelectionRadio';\nimport Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport MeasurementMap from './MeasurementMap';\nimport 'fontsource-roboto';\nimport './index.css';\n\nfunction App() {\n  const [mapType, setMapType] = useState<MapType>('ping');\n  const [selectedSites, setSelectedSites] = useState<SidebarOption[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  document.title = 'Performance Evaluation';\n  return (\n    <div className='App'>\n      <Navbar />\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <Sidebar\n              selectedSites={selectedSites}\n              setSelectedSites={setSelectedSites}\n              loading={loading}\n            />\n          </Grid>\n          <Grid item xs={9}>\n            <MapSelectionRadio\n              mapType={mapType}\n              setMapType={setMapType}\n              loading={loading}\n            />\n            <MeasurementMap\n              mapType={mapType}\n              selectedSites={selectedSites}\n              setLoading={setLoading}\n              width={910}\n              height={600}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}