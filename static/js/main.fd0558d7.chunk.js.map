{"version":3,"sources":["MapSelectionRadio.tsx","Navbar.tsx","Sidebar.tsx","SiteMarker.tsx","MeasurementPoint.tsx","Map.tsx","App.tsx","index.tsx"],"names":["MapSelectionRadio","React","useState","mapType","setMapType","className","Container","FormControl","component","Typography","variant","RadioGroup","row","aria-label","name","value","onChange","event","target","alert","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","color","Button","Example","selected","setSelected","options","labelledBy","colorDomain","statusColor","d3","domain","range","isSiteMarkerProps","prop","latitude","longitude","address","includes","status","SiteMarker","props","Marker","Popup","style","backgroundColor","MeasurementPoint","Circle","center","ping","device_id","timestamp","Map","pointColor","data","d","sites","every","Error","MapContainer","height","width","zoom","TileLayer","attribution","url","map","site","datum","App","document","Grid","container","item","xs","Sidebar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd0558d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport 'fontsource-roboto';\r\n\r\nexport default function MapSelectionRadio() {\r\n\r\n  type InputEvent = React.ChangeEvent<HTMLInputElement>;\r\n  const [mapType, setMapType] = React.useState('signal');\r\n\r\n  const handleChange = (event: InputEvent) => {\r\n    setMapType(event.target.value);\r\n    alert(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Container>\r\n        <FormControl component=\"fieldset\">\r\n          <Typography variant=\"overline\">\r\n            Map Type\r\n          </Typography>\r\n          <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={mapType} onChange={handleChange}>\r\n            <FormControlLabel value=\"signal\" control={<Radio />} label=\"Signal\" />\r\n            <FormControlLabel value=\"uploadSpeed\" control={<Radio />} label=\"Upload Speed\" />\r\n            <FormControlLabel value=\"downloadSpeed\" control={<Radio />} label=\"Download Speed\" />\r\n            <FormControlLabel value=\"traffic\" control={<Radio />} label=\"Traffic\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: \"20px\"\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            CCN - Performance Evaluation\r\n          </Typography>\r\n          <Button color=\"inherit\">About</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport 'fontsource-roboto';\r\n\r\nconst Example = () => {\r\n  const options = [\r\n    { label: \"David-TCN\", value: \"dtcn\" },\r\n    { label: \"Filipino Community Center\", value: \"fcc\" },\r\n    { label: \"SURGEtacoma\", value: \"stac\" },\r\n    { label: \"Hillside Church Kent\", value: \"hck\" },\r\n    { label: \"University Heights Center\", value: \"uhc\" },\r\n    { label: \"Skyway Library\", value: \"slib\" },\r\n    { label: \"Garfield High School\", value: \"ghs\" },\r\n    { label: \"Franklin High School\", value: \"fhs\" },\r\n    { label: \"ALTSpace\", value: \"alts\" },\r\n    { label: \"Oareao OCC Masjid\", value: \"oom\" },\r\n  ];\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"overline\">\r\n        Select Sites\r\n      </Typography>\r\n      {/* <p>DEBUG</p>\r\n      <p>{JSON.stringify(selected)}</p> */}\r\n      <MultiSelect\r\n        options={options}\r\n        value={selected}\r\n        onChange={setSelected}\r\n        labelledBy=\"Select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;","import React from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport * as d3 from 'd3';\n\ntype SiteStatus = 'active' | 'confirmed' | 'in-conversation';\nconst colorDomain: SiteStatus[] = ['active', 'confirmed', 'in-conversation'];\nconst colorRange = ['green', 'yellow', 'red'] as const;\nconst statusColor = d3\n  .scaleOrdinal<string>()\n  .domain(colorDomain)\n  .range(colorRange);\n\nexport interface SiteMarkerProps {\n  name: string;\n  latitude: number;\n  longitude: number;\n  status: SiteStatus;\n  address: string;\n}\n\nexport function isSiteMarkerProps(prop: any): prop is SiteMarkerProps {\n  return (\n    typeof prop?.name === 'string' ||\n    typeof prop?.latitude === 'number' ||\n    typeof prop?.longitude === 'number' ||\n    typeof prop?.address === 'string' ||\n    colorDomain.includes(prop?.status)\n  );\n}\n\nconst SiteMarker = (props: SiteMarkerProps) => {\n  return (\n    <Marker key={props.name} position={[props.latitude, props.longitude]}>\n      <Popup>\n        {props.name}\n        <span\n          style={{ backgroundColor: statusColor(props.status) }}\n        >[{props.status}]</span>\n        <br />\n        {props.address}\n      </Popup>\n    </Marker>\n  );\n};\n\nexport default SiteMarker;\n","import React from 'react';\nimport { Circle } from 'react-leaflet';\nimport { ScaleSequential } from 'd3';\n\ninterface MeasurementPointProps {\n  latitude: number;\n  longitude: number;\n  timestamp: string;\n  upload_speed: number;\n  download_speed: number;\n  data_since_last_report: number;\n  ping: number;\n  site: string;\n  device_id: number;\n  color: ScaleSequential<string, never>\n}\n\nconst MeasurementPoint = (props: MeasurementPointProps) => {\n  return <Circle\n    key={`${props.device_id}-${props.timestamp}`}\n    center={[props.latitude, props.longitude]}\n    color={props.color(props.ping)}\n  ></Circle>;\n};\n\nexport default MeasurementPoint;\n","import React from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport * as d3 from 'd3';\nimport sites from './sites.json';\nimport data from './data-small.json';\nimport SiteMarker, { isSiteMarkerProps, SiteMarkerProps } from './SiteMarker';\nimport MeasurementPoint from './MeasurementPoint';\n\nfunction isSiteMarkerPropsArray(sites: any[]): sites is SiteMarkerProps[] {\n  return sites.every(isSiteMarkerProps);\n}\n\nconst Map = () => {\n  const position: [number, number] = [47.4484600, -122.2921700];\n  const pointColor = d3\n    .scaleSequentialLog(d3.interpolateInferno)\n    .domain([\n      d3.max(data, d => d.ping) ?? 1,\n      d3.min(data, d => d.ping) ?? 0\n    ]);\n\n  if (!isSiteMarkerPropsArray(sites)) {\n    throw new Error('data has incorrect type');\n  }\n\n  return (\n    <MapContainer\n      style={{ height: 600, width: 1000 }}\n      center={position}\n      zoom={10}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      />\n      {sites.map(site => <SiteMarker {...site} />)}\n      {data.map(datum => <MeasurementPoint {...datum} color={pointColor} />)}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MapSelectionRadio from './MapSelectionRadio';\nimport Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport Map from './Map';\nimport 'fontsource-roboto';\nimport './index.css';\n\nfunction App() {\n  document.title = 'Performance Evaluation';\n  return (\n    <div className='App'>\n      <Navbar />\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <Sidebar />\n          </Grid>\n          <Grid item xs={9}>\n            <MapSelectionRadio />\n            <Map />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}